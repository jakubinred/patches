Binary files a/.DS_Store and b/.DS_Store differ
diff -ruN a/LICENSE.txt b/LICENSE.txt
--- a/LICENSE.txt	2016-11-17 00:57:05.000000000 +0100
+++ b/LICENSE.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,339 +0,0 @@
-                    GNU GENERAL PUBLIC LICENSE
-                       Version 2, June 1991
-
- Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
- 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
- Everyone is permitted to copy and distribute verbatim copies
- of this license document, but changing it is not allowed.
-
-                            Preamble
-
-  The licenses for most software are designed to take away your
-freedom to share and change it.  By contrast, the GNU General Public
-License is intended to guarantee your freedom to share and change free
-software--to make sure the software is free for all its users.  This
-General Public License applies to most of the Free Software
-Foundation's software and to any other program whose authors commit to
-using it.  (Some other Free Software Foundation software is covered by
-the GNU Lesser General Public License instead.)  You can apply it to
-your programs, too.
-
-  When we speak of free software, we are referring to freedom, not
-price.  Our General Public Licenses are designed to make sure that you
-have the freedom to distribute copies of free software (and charge for
-this service if you wish), that you receive source code or can get it
-if you want it, that you can change the software or use pieces of it
-in new free programs; and that you know you can do these things.
-
-  To protect your rights, we need to make restrictions that forbid
-anyone to deny you these rights or to ask you to surrender the rights.
-These restrictions translate to certain responsibilities for you if you
-distribute copies of the software, or if you modify it.
-
-  For example, if you distribute copies of such a program, whether
-gratis or for a fee, you must give the recipients all the rights that
-you have.  You must make sure that they, too, receive or can get the
-source code.  And you must show them these terms so they know their
-rights.
-
-  We protect your rights with two steps: (1) copyright the software, and
-(2) offer you this license which gives you legal permission to copy,
-distribute and/or modify the software.
-
-  Also, for each author's protection and ours, we want to make certain
-that everyone understands that there is no warranty for this free
-software.  If the software is modified by someone else and passed on, we
-want its recipients to know that what they have is not the original, so
-that any problems introduced by others will not reflect on the original
-authors' reputations.
-
-  Finally, any free program is threatened constantly by software
-patents.  We wish to avoid the danger that redistributors of a free
-program will individually obtain patent licenses, in effect making the
-program proprietary.  To prevent this, we have made it clear that any
-patent must be licensed for everyone's free use or not licensed at all.
-
-  The precise terms and conditions for copying, distribution and
-modification follow.
-
-                    GNU GENERAL PUBLIC LICENSE
-   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
-
-  0. This License applies to any program or other work which contains
-a notice placed by the copyright holder saying it may be distributed
-under the terms of this General Public License.  The "Program", below,
-refers to any such program or work, and a "work based on the Program"
-means either the Program or any derivative work under copyright law:
-that is to say, a work containing the Program or a portion of it,
-either verbatim or with modifications and/or translated into another
-language.  (Hereinafter, translation is included without limitation in
-the term "modification".)  Each licensee is addressed as "you".
-
-Activities other than copying, distribution and modification are not
-covered by this License; they are outside its scope.  The act of
-running the Program is not restricted, and the output from the Program
-is covered only if its contents constitute a work based on the
-Program (independent of having been made by running the Program).
-Whether that is true depends on what the Program does.
-
-  1. You may copy and distribute verbatim copies of the Program's
-source code as you receive it, in any medium, provided that you
-conspicuously and appropriately publish on each copy an appropriate
-copyright notice and disclaimer of warranty; keep intact all the
-notices that refer to this License and to the absence of any warranty;
-and give any other recipients of the Program a copy of this License
-along with the Program.
-
-You may charge a fee for the physical act of transferring a copy, and
-you may at your option offer warranty protection in exchange for a fee.
-
-  2. You may modify your copy or copies of the Program or any portion
-of it, thus forming a work based on the Program, and copy and
-distribute such modifications or work under the terms of Section 1
-above, provided that you also meet all of these conditions:
-
-    a) You must cause the modified files to carry prominent notices
-    stating that you changed the files and the date of any change.
-
-    b) You must cause any work that you distribute or publish, that in
-    whole or in part contains or is derived from the Program or any
-    part thereof, to be licensed as a whole at no charge to all third
-    parties under the terms of this License.
-
-    c) If the modified program normally reads commands interactively
-    when run, you must cause it, when started running for such
-    interactive use in the most ordinary way, to print or display an
-    announcement including an appropriate copyright notice and a
-    notice that there is no warranty (or else, saying that you provide
-    a warranty) and that users may redistribute the program under
-    these conditions, and telling the user how to view a copy of this
-    License.  (Exception: if the Program itself is interactive but
-    does not normally print such an announcement, your work based on
-    the Program is not required to print an announcement.)
-
-These requirements apply to the modified work as a whole.  If
-identifiable sections of that work are not derived from the Program,
-and can be reasonably considered independent and separate works in
-themselves, then this License, and its terms, do not apply to those
-sections when you distribute them as separate works.  But when you
-distribute the same sections as part of a whole which is a work based
-on the Program, the distribution of the whole must be on the terms of
-this License, whose permissions for other licensees extend to the
-entire whole, and thus to each and every part regardless of who wrote it.
-
-Thus, it is not the intent of this section to claim rights or contest
-your rights to work written entirely by you; rather, the intent is to
-exercise the right to control the distribution of derivative or
-collective works based on the Program.
-
-In addition, mere aggregation of another work not based on the Program
-with the Program (or with a work based on the Program) on a volume of
-a storage or distribution medium does not bring the other work under
-the scope of this License.
-
-  3. You may copy and distribute the Program (or a work based on it,
-under Section 2) in object code or executable form under the terms of
-Sections 1 and 2 above provided that you also do one of the following:
-
-    a) Accompany it with the complete corresponding machine-readable
-    source code, which must be distributed under the terms of Sections
-    1 and 2 above on a medium customarily used for software interchange; or,
-
-    b) Accompany it with a written offer, valid for at least three
-    years, to give any third party, for a charge no more than your
-    cost of physically performing source distribution, a complete
-    machine-readable copy of the corresponding source code, to be
-    distributed under the terms of Sections 1 and 2 above on a medium
-    customarily used for software interchange; or,
-
-    c) Accompany it with the information you received as to the offer
-    to distribute corresponding source code.  (This alternative is
-    allowed only for noncommercial distribution and only if you
-    received the program in object code or executable form with such
-    an offer, in accord with Subsection b above.)
-
-The source code for a work means the preferred form of the work for
-making modifications to it.  For an executable work, complete source
-code means all the source code for all modules it contains, plus any
-associated interface definition files, plus the scripts used to
-control compilation and installation of the executable.  However, as a
-special exception, the source code distributed need not include
-anything that is normally distributed (in either source or binary
-form) with the major components (compiler, kernel, and so on) of the
-operating system on which the executable runs, unless that component
-itself accompanies the executable.
-
-If distribution of executable or object code is made by offering
-access to copy from a designated place, then offering equivalent
-access to copy the source code from the same place counts as
-distribution of the source code, even though third parties are not
-compelled to copy the source along with the object code.
-
-  4. You may not copy, modify, sublicense, or distribute the Program
-except as expressly provided under this License.  Any attempt
-otherwise to copy, modify, sublicense or distribute the Program is
-void, and will automatically terminate your rights under this License.
-However, parties who have received copies, or rights, from you under
-this License will not have their licenses terminated so long as such
-parties remain in full compliance.
-
-  5. You are not required to accept this License, since you have not
-signed it.  However, nothing else grants you permission to modify or
-distribute the Program or its derivative works.  These actions are
-prohibited by law if you do not accept this License.  Therefore, by
-modifying or distributing the Program (or any work based on the
-Program), you indicate your acceptance of this License to do so, and
-all its terms and conditions for copying, distributing or modifying
-the Program or works based on it.
-
-  6. Each time you redistribute the Program (or any work based on the
-Program), the recipient automatically receives a license from the
-original licensor to copy, distribute or modify the Program subject to
-these terms and conditions.  You may not impose any further
-restrictions on the recipients' exercise of the rights granted herein.
-You are not responsible for enforcing compliance by third parties to
-this License.
-
-  7. If, as a consequence of a court judgment or allegation of patent
-infringement or for any other reason (not limited to patent issues),
-conditions are imposed on you (whether by court order, agreement or
-otherwise) that contradict the conditions of this License, they do not
-excuse you from the conditions of this License.  If you cannot
-distribute so as to satisfy simultaneously your obligations under this
-License and any other pertinent obligations, then as a consequence you
-may not distribute the Program at all.  For example, if a patent
-license would not permit royalty-free redistribution of the Program by
-all those who receive copies directly or indirectly through you, then
-the only way you could satisfy both it and this License would be to
-refrain entirely from distribution of the Program.
-
-If any portion of this section is held invalid or unenforceable under
-any particular circumstance, the balance of the section is intended to
-apply and the section as a whole is intended to apply in other
-circumstances.
-
-It is not the purpose of this section to induce you to infringe any
-patents or other property right claims or to contest validity of any
-such claims; this section has the sole purpose of protecting the
-integrity of the free software distribution system, which is
-implemented by public license practices.  Many people have made
-generous contributions to the wide range of software distributed
-through that system in reliance on consistent application of that
-system; it is up to the author/donor to decide if he or she is willing
-to distribute software through any other system and a licensee cannot
-impose that choice.
-
-This section is intended to make thoroughly clear what is believed to
-be a consequence of the rest of this License.
-
-  8. If the distribution and/or use of the Program is restricted in
-certain countries either by patents or by copyrighted interfaces, the
-original copyright holder who places the Program under this License
-may add an explicit geographical distribution limitation excluding
-those countries, so that distribution is permitted only in or among
-countries not thus excluded.  In such case, this License incorporates
-the limitation as if written in the body of this License.
-
-  9. The Free Software Foundation may publish revised and/or new versions
-of the General Public License from time to time.  Such new versions will
-be similar in spirit to the present version, but may differ in detail to
-address new problems or concerns.
-
-Each version is given a distinguishing version number.  If the Program
-specifies a version number of this License which applies to it and "any
-later version", you have the option of following the terms and conditions
-either of that version or of any later version published by the Free
-Software Foundation.  If the Program does not specify a version number of
-this License, you may choose any version ever published by the Free Software
-Foundation.
-
-  10. If you wish to incorporate parts of the Program into other free
-programs whose distribution conditions are different, write to the author
-to ask for permission.  For software which is copyrighted by the Free
-Software Foundation, write to the Free Software Foundation; we sometimes
-make exceptions for this.  Our decision will be guided by the two goals
-of preserving the free status of all derivatives of our free software and
-of promoting the sharing and reuse of software generally.
-
-                            NO WARRANTY
-
-  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
-FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
-OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
-PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
-OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
-TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
-PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
-REPAIR OR CORRECTION.
-
-  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
-WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
-REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
-INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
-OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
-TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
-YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
-PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGES.
-
-                     END OF TERMS AND CONDITIONS
-
-            How to Apply These Terms to Your New Programs
-
-  If you develop a new program, and you want it to be of the greatest
-possible use to the public, the best way to achieve this is to make it
-free software which everyone can redistribute and change under these terms.
-
-  To do so, attach the following notices to the program.  It is safest
-to attach them to the start of each source file to most effectively
-convey the exclusion of warranty; and each file should have at least
-the "copyright" line and a pointer to where the full notice is found.
-
-    <one line to give the program's name and a brief idea of what it does.>
-    Copyright (C) <year>  <name of author>
-
-    This program is free software; you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation; either version 2 of the License, or
-    (at your option) any later version.
-
-    This program is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License along
-    with this program; if not, write to the Free Software Foundation, Inc.,
-    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-
-Also add information on how to contact you by electronic and paper mail.
-
-If the program is interactive, make it output a short notice like this
-when it starts in an interactive mode:
-
-    Gnomovision version 69, Copyright (C) year name of author
-    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
-    This is free software, and you are welcome to redistribute it
-    under certain conditions; type `show c' for details.
-
-The hypothetical commands `show w' and `show c' should show the appropriate
-parts of the General Public License.  Of course, the commands you use may
-be called something other than `show w' and `show c'; they could even be
-mouse-clicks or menu items--whatever suits your program.
-
-You should also get your employer (if you work as a programmer) or your
-school, if any, to sign a "copyright disclaimer" for the program, if
-necessary.  Here is a sample; alter the names:
-
-  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
-  `Gnomovision' (which makes passes at compilers) written by James Hacker.
-
-  <signature of Ty Coon>, 1 April 1989
-  Ty Coon, President of Vice
-
-This General Public License does not permit incorporating your program into
-proprietary programs.  If your program is a subroutine library, you may
-consider it more useful to permit linking proprietary applications with the
-library.  If this is what you want to do, use the GNU Lesser General
-Public License instead of this License.
diff -ruN a/README.md b/README.md
--- a/README.md	2023-04-21 15:54:02.000000000 +0200
+++ b/README.md	2023-05-08 20:26:39.000000000 +0200
@@ -59,7 +59,7 @@
 Yes! Please use the importer service and hook_update_N or similar to do it.
 
 ```php
-function example_update_9001() {
+function example_update_8001() {
   $file_path = \Drupal::service('extension.list.module')
     ->getPath('example') . '/assets/homepage.yml';
 
@@ -72,7 +72,7 @@
 use the following code:
 
 ```php
-function example_update_9001() {
+function example_update_8001() {
   $file_path = \Drupal::service('extension.list.module')
     ->getPath('example') . '/assets/homepage.zip';
 
diff -ruN a/drush.services.yml b/drush.services.yml
--- a/drush.services.yml	1970-01-01 01:00:00.000000000 +0100
+++ b/drush.services.yml	2023-05-08 20:27:58.000000000 +0200
@@ -0,0 +1,14 @@
+services:
+    single_content_sync.commands:
+        class: \Drupal\single_content_sync\Commands\ContentSyncCommands
+        arguments:
+            - "@single_content_sync.exporter"
+            - "@single_content_sync.importer"
+            - "@single_content_sync.file_generator"
+            - "@messenger"
+            - "@config.factory"
+            - "@entity_type.manager"
+            - "@single_content_sync.helper"
+            - "@file_system"
+        tags:
+            - { name: drush.command }
diff -ruN a/single_content_sync.info.yml b/single_content_sync.info.yml
--- a/single_content_sync.info.yml	2023-04-21 19:49:33.000000000 +0200
+++ b/single_content_sync.info.yml	2023-05-08 20:26:39.000000000 +0200
@@ -6,8 +6,3 @@
 configure: single_content_sync.config_settings
 dependencies:
   - drupal:file
-
-# Information added by Drupal.org packaging script on 2023-04-21
-version: '1.3.15'
-project: 'single_content_sync'
-datestamp: 1682099373
Binary files a/src/.DS_Store and b/src/.DS_Store differ
diff -ruN a/src/Commands/ContentSyncCommands.php b/src/Commands/ContentSyncCommands.php
--- a/src/Commands/ContentSyncCommands.php	1970-01-01 01:00:00.000000000 +0100
+++ b/src/Commands/ContentSyncCommands.php	2023-05-08 20:27:58.000000000 +0200
@@ -0,0 +1,366 @@
+<?php
+namespace Drupal\single_content_sync\Commands;
+
+use Drupal\Core\Config\ConfigFactoryInterface;
+use Drupal\Core\Entity\EntityTypeManagerInterface;
+use Drupal\Core\File\FileSystemInterface;
+use Drupal\Core\Messenger\MessengerInterface;
+use Drupal\single_content_sync\ContentExporterInterface;
+use Drupal\single_content_sync\ContentFileGeneratorInterface;
+use Drupal\single_content_sync\ContentImporterInterface;
+use Drupal\single_content_sync\ContentSyncHelperInterface;
+use Drush\Commands\DrushCommands;
+
+class ContentSyncCommands extends DrushCommands {
+
+  /**
+   * The content exporter service.
+   * 
+   * @var \Drupal\single_content_sync\ContentExporterInterface
+   */
+  protected $contentExporter;
+
+  /**
+   * The content importer service.
+   * 
+   * @var \Drupal\single_content_sync\ContentImporterInterface
+   */
+  protected $contentImporter;
+
+  /**
+   * The content file generator service.
+   * 
+   * @var \Drupal\single_content_sync\ContentFileGeneratorInterface
+   */
+  protected $fileGenerator;
+
+  /**
+   * The messenger service.
+   * 
+   * @var \Drupal\Core\Messenger\MessengerInterface
+   */
+  protected $messenger;
+
+  /**
+   * The config factory service.
+   * 
+   * @var \Drupal\Core\Config\ConfigFactoryInterface
+   */
+  protected $configFactory;
+
+  /**
+   * The entity type manager service.
+   * 
+   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
+   */
+  protected $entityTypeManager;
+
+  /**
+   * The content sync helper service.
+   * 
+   * @var \Drupal\single_content_sync\ContentSyncHelperInterface
+   */
+  protected $contentSyncHelper;
+
+  /**
+   * The file system service.
+   * 
+   * @var \Drupal\Core\File\FileSystemInterface
+   */
+  protected $fileSystem;
+
+  /**
+   * Constructor of ContentSyncCommands.
+   * 
+   * @param \Drupal\single_content_sync\ContentExporter $contentExporter
+   *  The content exporter service.
+   * @param \Drupal\single_content_sync\ContentFileGenerator $fileGenerator
+   *  The content file generator service.
+   * @param \Drupal\Core\Messenger\MessengerInterface $messenger
+   *  The messenger service.
+   * @param \Drupal\Core\Config\ConfigFactoryInterface $configFactory
+   *  The config factory service.
+   */
+  public function __construct(ContentExporterInterface $content_exporter, ContentImporterInterface $content_importer, ContentFileGeneratorInterface $file_generator, MessengerInterface $messenger, ConfigFactoryInterface $config_factory, EntityTypeManagerInterface $entity_type_manager, ContentSyncHelperInterface $content_sync_helper, FileSystemInterface $file_system) {
+    $this->contentExporter = $content_exporter;
+    $this->contentImporter = $content_importer;
+    $this->fileGenerator = $file_generator;
+    $this->messenger = $messenger; 
+    $this->configFactory = $config_factory;
+    $this->entityTypeManager = $entity_type_manager;
+    $this->contentSyncHelper = $content_sync_helper;
+    $this->fileSystem = $file_system;
+  }
+
+  /**
+   * Export all content of a given entity type.
+   * 
+   * By default, running the content:export command as is ('drush content:export'), 
+   * all entities of type 'node' will be exported, if allowed in the site's configuration, 
+   * and placed in the directory from which the command was run.
+   * 
+   * @command content:export
+   * 
+   * @param $entityType The entity type to export, e.g. 'node'. default is 'node'.
+   * @option $translate Whether or not to include translations in the export.
+   * @option $assets Whether or not to include assets in the export.
+   * @option $all-content Will export all entity types.
+   * @option $dry-run Will run the command in 'dry-run mode' and will not export anything.
+   * @option $entities 
+   *    A comma separated string of entity id's to be exported. 
+   *    Combine with @param $entityType in order to target the correct entities.
+   *    if $all-content is used, it will take priority over this option.
+   * 
+   * @usage content:export node /relative/output/path --entities="1,4,17" --translate --assets --all-content --dry-run
+   */
+  public function exportEntitiesCommand($entityType = 'node', $outputPath = '.' ,$options = ['translate' => FALSE, 'assets' => FALSE, 'all-content' => FALSE, 'dry-run' => FALSE, 'entities' => NULL]): void {
+    ['translate' => $include_translations, 'assets' => $include_assets, 'all-content' => $all_allowed_content, 'dry-run' => $is_dry_run, 'entities' => $entity_ids_to_export] = $options;
+    $output_dir = $this->getRealDirectory($outputPath);
+    
+    $message = $this->createMessageWithFlags("\nExecuting drush content:export {$entityType} {$outputPath}", $options);
+    $this->output->write($message);
+    $is_dry_run && $this->output->writeln("This is a dry run. No content will be exported.\n");
+
+    $entities = $this->getEntitiesToExport($entityType, $all_allowed_content, $entity_ids_to_export);
+    if ($this->checkDisallowedEntities($entities)) {
+      return;
+    }
+    if ($is_dry_run) {
+      $file_name = sizeof($entities) === 1 && !$include_assets
+        ? "{$this->contentSyncHelper->generateContentFileName($entities[0])}.yml"
+        : sprintf('content-bulk-export-%s.zip', date('d_m_Y-H_i'));
+      $zip_path = "{$output_dir}/{$file_name}";
+      $this->messenger->addStatus("Successfully exported the content. You can find the exported file at the following location:\n{$zip_path}");
+      return;
+    }
+    
+    $file = sizeof($entities) === 1 && !$include_assets
+      ? $this->fileGenerator->generateYamlFile($entities[0], $include_translations)
+      : $this->fileGenerator->generateBulkZipFile($entities, $include_translations, $include_assets);
+    $file_target = isset($_SERVER['PWD'])
+      ? $this->moveFile($file, $output_dir, explode('://', $file->getFileUri(), 2)[1])
+      : explode('://', $file->getFileUri(), 2)[1];
+
+    $this->messenger->addStatus("Successfully exported the content. You can find the exported file at the following location:\n{$file_target}");
+  }
+
+  /**
+   * Import content from a file at the given path.
+   * On Windows systems, $_SERVER['PWD'] might not be set.
+   * In that case, the path will be started from the default scheme 'public://'.
+   * If $_SERVER['PWD'] is set, the path will relative from the directory from
+   * which the command was run.
+   * 
+   * @command content:import
+   * 
+   * @param $path The path to the file to import.
+   * 
+   * @usage content:import /path/to/file.zip
+   */
+  public function importEntitiesCommand($path): void {
+    $message = $this->createMessageWithFlags("\nExecuting drush content:import {$path}");
+    $this->output->write($message);
+    $default_scheme = $this->configFactory->get('system.file')->get('default_scheme');
+    $file_path = "{$default_scheme}://{$path}";
+
+    if (isset($_SERVER['PWD'])) {
+      $file_path = strpos($path, $_SERVER['PWD']) !== FALSE
+        ? $path
+        : $this->getRealDirectory($path);
+    }
+    $file_info = pathinfo($file_path);
+
+    try {
+      $file_info['extension'] === 'zip' ? $this->commandZipImport($file_path) : $this->contentImporter->importFromFile($file_path);
+    } catch (\Exception $e) {
+      $this->messenger->addError($e->getMessage());
+    }
+    $this->messenger->addStatus("Successfully imported the content.");
+  }
+
+  /**
+   * Append flags to a message.
+   * 
+   * @param string $message
+   *   The message to append flags to.
+   * @param array $options
+   *   The options array with flags to append.
+   */
+  private function createMessageWithFlags(string $message, array $options = []): string {
+    $include_translations = $options['translate'] ?? false;
+    $include_assets = $options['assets'] ?? false;
+    $all_allowed_content = $options['all-content'] ?? false;
+    $is_dry_run = $options['dry-run'] ?? false;
+    $entity_ids_to_export = $options['entities'] ?? null;
+
+    $flags = '';
+    $flags .= $include_translations ? ' --translate' : '';
+    $flags .= $include_assets ? ' --assets' : '';
+    $flags .= $all_allowed_content ? ' --all-content' : '';
+    $flags .= $is_dry_run ? ' --dry-run' : '';
+    $flags .= $entity_ids_to_export ? " --entities=\"{$entity_ids_to_export}\"" : '';
+
+    return "{$message}{$flags}\n\n";
+}
+
+  /**
+   * Check if the given entities contain disallowed entities.
+   * 
+   * @param array $entities
+   *    The entities to check.
+   * 
+   *  Returns TRUE if the given entities contain disallowed entities,
+   *  else returns FALSE.
+   */
+  private function checkDisallowedEntities($entities): bool {
+    $disallowed = $this->contentSyncHelper->containsDisallowedEntities($entities);
+    if ($disallowed) {
+      $this->messenger->addError("The export couldn't be completed since it contains disallowed content. Please check the configuration of the Single Content Sync module, or export only allowed content.");
+      return TRUE;
+    }
+    return FALSE;
+  }
+
+  /**
+   * Import content from a zip file.
+   * 
+   * @param string $file_path
+   *   The path to the zip file to import.
+   */
+  private function commandZipImport(string $file_path): void {
+    $zip = $this->contentSyncHelper->createZipInstance($file_path);
+
+    $import_directory = $this->contentSyncHelper->createImportDirectory();
+    $zip->extract($import_directory);
+
+    $content_file_path = NULL;
+
+    // Always import assets first, even if they're at the end of ZIP archive.
+    foreach ($zip->listContents() as $zip_file) {
+      $original_file_path = "{$import_directory}/{$zip_file}";
+      if (strpos($zip_file, 'assets') === 0) {
+        $this->contentImporter->importAssets($original_file_path, $zip_file);
+      }
+    }
+
+    foreach ($zip->listContents() as $zip_file) {
+      $original_file_path = "{$import_directory}/{$zip_file}";
+      if (strpos($zip_file, 'content') === FALSE) {
+        $content_file_path = $original_file_path;
+        $this->contentImporter->importFromFile($original_file_path);
+      }
+
+      if (is_null($content_file_path)) {
+        throw new \Exception("The content file in YAML format could not be found.");
+      }
+    }
+  }
+
+  /**
+   * Get the entities to export.
+   * 
+   * @param string $entityType
+   *    The entity type to export, e.g. 'node'.
+   * @param bool $all_allowed_content
+   *    Will export all entity types if set to TRUE.
+   * 
+   *    Returns an array of entities to export.
+   */
+  private function getEntitiesToExport($entityType = 'node', $all_allowed_content = FALSE, $entity_ids_to_export = NULL): array {
+    if ($all_allowed_content) {
+      $allowed_entity_types = $this->configFactory->get('single_content_sync.settings')->get('allowed_entity_types');
+      $entities = array_reduce($this->entityTypeManager->getDefinitions(), function ($carry, $entity_type) use ($allowed_entity_types) {
+        if (isset($allowed_entity_types[$entity_type->id()])) {
+          return array_merge($carry, $this->entityTypeManager->getStorage($entity_type->id())->loadMultiple());
+        }
+        return $carry;
+      }, []);
+    } else if ($entity_ids_to_export) {
+      $entities = $this->getSelectedEntities($entityType, $entity_ids_to_export);
+    } else {
+      $entities = $this->entityTypeManager->getStorage($entityType)->loadMultiple();
+    }
+    return $entities;
+  }
+
+  /**
+   * Get an array of entities to export based on an entity type and an array of entity ids.
+   * 
+   * @param string $entityType
+   *    The entity type to export, e.g. 'node'.
+   * @param string $ids_to_export
+   *    A comma separated string of entity type ids to export, e.g. "1,2,5".
+   * 
+   *    Returns an array of entities.
+   */
+  private function getSelectedEntities($entityType, $ids_to_export): array {
+    $entity_ids = explode(",", $ids_to_export);
+    $entities = [];
+    $invalid_ids = [];
+    foreach($entity_ids as $id) {
+      if (!intval($id)) {
+        array_push($invalid_ids, $id);
+      }
+    }
+    if (!empty($invalid_ids)) {
+      $err_out = implode( ", ", $invalid_ids);
+      throw new \Exception("The export couldn't be completed because the --entities contain invalid ids: {$err_out}");
+    }
+    foreach ($entity_ids as $id) {
+      array_push($entities, $this->entityTypeManager->getStorage($entityType)->load($id));
+    }
+    return $entities;
+  }
+
+  /**
+   * Move a file to directory.
+   * On Windows systems, the $_SERVER['PWD'] might not work. In that case,
+   * the file will remain in the default export location of 'sites/default/files/export/'.
+   * 
+   * @param FileInterface $file
+   *    The file to move.
+   * @param string $output_path
+   *    A relative path to move the file to.
+   * @param string $file_target
+   *    The current location of the file.
+   */
+  private function moveFile($file, $output_dir, $file_target): string {
+    if (!$output_dir) {
+        return $file_target;
+    }
+
+    $target_base_name = basename($file_target);
+    $moved_file_path = "{$output_dir}/{$target_base_name}";
+    $this->fileSystem->move($file->getFileUri(), $moved_file_path);
+
+    return $moved_file_path;
+}
+
+  /**
+   * Gets the real output directory based on a relative output path.
+   * On Windows systems, the $_SERVER['PWD'] might not work. In that case,
+   * the file will remain in the default export location of 'sites/default/files/export/'.
+   * 
+   * @param string $output_path
+   *    The relative ouput path.
+   * 
+   *    Returns a string with the real output directory.
+   */
+  private function getRealDirectory($output_path): string {
+    if (!isset($_SERVER['PWD'])) {
+        return '';
+    }
+
+    $grandparent_path = $_SERVER['PWD'];
+    if ($output_path) {
+        $relative_dir = rtrim(ltrim($output_path, './'), '/');
+        $parent_count = substr_count($relative_dir, '../');
+        $grandparent_path = !!$parent_count ? dirname($grandparent_path, $parent_count) : $grandparent_path;
+        $trimmed_relative_dir = ltrim(str_replace('../', '', $relative_dir), '/');
+        $output_dir = "{$grandparent_path}/{$trimmed_relative_dir}";
+        $this->contentSyncHelper->prepareFilesDirectory($output_dir);
+        return $output_dir;
+    }
+    return $grandparent_path;
+  }
+}
diff -ruN a/src/ContentExporter.php b/src/ContentExporter.php
--- a/src/ContentExporter.php	2023-04-21 15:54:02.000000000 +0200
+++ b/src/ContentExporter.php	2023-05-08 20:26:39.000000000 +0200
@@ -3,7 +3,6 @@
 namespace Drupal\single_content_sync;
 
 use Drupal\block_content\BlockContentInterface;
-use Drupal\block_content\Entity\BlockContent;
 use Drupal\Component\Utility\Html;
 use Drupal\Core\Config\Entity\ConfigEntityInterface;
 use Drupal\Core\Entity\EntityRepositoryInterface;
@@ -235,13 +234,11 @@
     if ($this->extractTranslationsMode && $entity->isTranslatable()) {
       $translations = $entity->getTranslationLanguages();
 
+      // Exclude the default language from the translations.
+      unset($translations[$this->languageManager->getDefaultLanguage()->getId()]);
+
       if (count($translations)) {
         foreach ($translations as $language) {
-          // Skip the default loaded translation.
-          if ($entity->language()->getId() === $language->getId()) {
-            continue;
-          }
-
           $translated_entity = $entity->getTranslation($language->getId());
 
           $output['translations'][$language->getId()]['base_fields'] = $this->exportBaseValues($translated_entity);
@@ -274,7 +271,6 @@
    * {@inheritdoc}
    */
   public function exportBaseValues(FieldableEntityInterface $entity): array {
-    $base_fields = [];
     $entity_type = $entity->getEntityTypeId();
 
     switch ($entity_type) {
@@ -282,7 +278,7 @@
         if ($entity instanceof NodeInterface) {
           $owner = $entity->getOwner();
 
-          $base_fields = [
+          return [
             'title' => $entity->getTitle(),
             'status' => $entity->isPublished(),
             'langcode' => $entity->language()->getId(),
@@ -297,7 +293,7 @@
 
       case 'block_content':
         if ($entity instanceof BlockContentInterface) {
-          $base_fields = [
+          return [
             'info' => $entity->label(),
             'reusable' => $entity->isReusable(),
             'langcode' => $entity->language()->getId(),
@@ -309,7 +305,7 @@
 
       case 'media':
         if ($entity instanceof MediaInterface) {
-          $base_fields = [
+          return [
             'name' => $entity->getName(),
             'created' => $entity->getCreatedTime(),
             'status' => $entity->isPublished(),
@@ -320,7 +316,7 @@
 
       case 'user':
         if ($entity instanceof UserInterface) {
-          $base_fields = [
+          return [
             'mail' => $entity->getEmail(),
             'init' => $entity->getInitialEmail(),
             'name' => $entity->getAccountName(),
@@ -333,7 +329,7 @@
 
       case 'taxonomy_term':
         if ($entity instanceof TermInterface) {
-          $base_fields = [
+          return [
             'name' => $entity->getName(),
             'weight' => $entity->getWeight(),
             'langcode' => $entity->language()->getId(),
@@ -346,25 +342,15 @@
         break;
 
       case 'paragraph':
-        $base_fields = [
+        return [
           'status' => $entity->isPublished(),
           'langcode' => $entity->language()->getId(),
           'created' => $entity->getCreatedTime(),
         ];
-        break;
-
-      default:
-        // This entity type is not supported out of the box. Return an empty
-        // array to check later if there is a custom implementation.
-        return [];
     }
 
-    // Support moderation state for multiple entity types.
-    if ($entity->hasField('moderation_state') && !$entity->get('moderation_state')->isEmpty()) {
-      $base_fields['moderation_state'] = $entity->get('moderation_state')->value;
-    }
-
-    return $base_fields;
+    // No base fields found for the entity.
+    return [];
   }
 
   /**
@@ -566,18 +552,8 @@
           foreach ($components as $component) {
             if ($component->getPlugin() instanceof InlineBlock) {
               $configuration = $component->toArray()['configuration'];
-              $block = NULL;
-
-              if (isset($configuration['block_serialized'])) {
-                $block = unserialize($configuration['block_serialized'], [
-                  'allowed_classes' => [BlockContent::class],
-                ]);
-              }
-              elseif (isset($configuration['block_revision_id'])) {
+              if (isset($configuration['block_revision_id'])) {
                 $block = $block_storage->loadRevision($configuration['block_revision_id']);
-              }
-
-              if ($block) {
                 $block_list[] = $this->doExportToArray($block);
               }
             }
diff -ruN a/src/ContentImporter.php b/src/ContentImporter.php
--- a/src/ContentImporter.php	2023-04-21 15:54:02.000000000 +0200
+++ b/src/ContentImporter.php	2023-05-08 20:26:39.000000000 +0200
@@ -225,12 +225,6 @@
   public function importBaseValues(FieldableEntityInterface $entity, array $fields): void {
     $values = $this->mapBaseFieldsValues($entity->getEntityTypeId(), $fields);
 
-    // It's possible to export a single translation of the entity. In this case,
-    // we need to load the translation of the entity to import the values.
-    if (isset($values['langcode']) && $entity instanceof TranslatableInterface && $entity->hasTranslation($values['langcode'])) {
-      $entity = $entity->getTranslation($values['langcode']);
-    }
-
     foreach ($values as $field_name => $value) {
       $entity->set($field_name, $value);
     }
@@ -239,7 +233,7 @@
   /**
    * {@inheritdoc}
    */
-  public function setFieldValue(FieldableEntityInterface $entity, string $field_name, $field_value): void {
+  public function setFieldValue(FieldableEntityInterface $entity, string $field_name, mixed $field_value): void {
     if (!$entity->hasField($field_name)) {
       return;
     }
@@ -558,26 +552,27 @@
    * {@inheritdoc}
    */
   public function mapBaseFieldsValues(string $entity_type_id, array $values): array {
+    $map_values = [];
+
     switch ($entity_type_id) {
       case 'node':
-        $entity = [
+        $node = [
           'title' => $values['title'],
           'langcode' => $values['langcode'],
           'created' => $values['created'],
           'status' => $values['status'],
         ];
-
         // We check if node url alias is filled in.
         if (isset($values['url'])) {
-          $entity['path'] = [
+          $node['path'] = [
             'alias' => $values['url'],
             'pathauto' => empty($values['url']),
           ];
         }
-        break;
+        return $node;
 
       case 'user':
-        $entity = [
+        return [
           'mail' => $values['mail'],
           'init' => $values['init'],
           'name' => $values['name'],
@@ -585,52 +580,39 @@
           'status' => $values['status'],
           'timezone' => $values['timezone'],
         ];
-        break;
 
       case 'block_content':
-        $entity = [
+        return [
           'langcode' => $values['langcode'],
           'info' => $values['info'],
           'reusable' => $values['reusable'],
         ];
-        break;
 
       case 'media':
-        $entity = [
+        return [
           'langcode' => $values['langcode'],
           'name' => $values['name'],
           'status' => $values['status'],
           'created' => $values['created'],
         ];
-        break;
 
       case 'taxonomy_term':
-        $entity = [
+        return [
           'name' => $values['name'],
           'weight' => $values['weight'],
           'langcode' => $values['langcode'],
           'description' => $values['description'],
         ];
-        break;
 
       case 'paragraph':
-        $entity = [
+        return [
           'langcode' => $values['langcode'],
           'created' => $values['created'],
           'status' => $values['status'],
         ];
-        break;
-
-      default:
-        return [];
-    }
-
-    // Set moderation state if it is supported for multiple entities.
-    if (isset($values['moderation_state'])) {
-      $entity['moderation_state'] = $values['moderation_state'];
     }
 
-    return $entity;
+    return $map_values;
   }
 
   /**
diff -ruN a/src/ContentImporterInterface.php b/src/ContentImporterInterface.php
--- a/src/ContentImporterInterface.php	2023-04-21 15:54:02.000000000 +0200
+++ b/src/ContentImporterInterface.php	2023-05-08 20:26:39.000000000 +0200
@@ -31,7 +31,7 @@
    * @param mixed $field_value
    *   Field value.
    */
-  public function setFieldValue(FieldableEntityInterface $entity, string $field_name, $field_value): void;
+  public function setFieldValue(FieldableEntityInterface $entity, string $field_name, mixed $field_value): void;
 
   /**
    * Import content from the YAML file.
diff -ruN a/src/ContentSyncHelper.php b/src/ContentSyncHelper.php
--- a/src/ContentSyncHelper.php	2023-04-21 15:54:02.000000000 +0200
+++ b/src/ContentSyncHelper.php	2023-05-08 20:27:58.000000000 +0200
@@ -260,4 +260,19 @@
     return $this->configFactory->get('system.site')->get('uuid');
   }
 
+  /**
+   * {@inheritdoc}
+   */
+  public function containsDisallowedEntities(array $entities): bool {
+    $allowed_entity_types = $this->configFactory->get('single_content_sync.settings')->get('allowed_entity_types');
+      foreach ($entities as $entity) {
+          $entity_type_id = $entity->getEntityTypeId();
+      if (!isset($allowed_entity_types[$entity_type_id]) || ($allowed_entity_types[$entity_type_id] && !isset($allowed_entity_types[$entity_type_id][$entity->bundle()]))) {
+          return TRUE;
+        }
+      }
+      return FALSE;
+  
+  }
+
 }
diff -ruN a/src/ContentSyncHelperInterface.php b/src/ContentSyncHelperInterface.php
--- a/src/ContentSyncHelperInterface.php	2023-04-21 15:54:02.000000000 +0200
+++ b/src/ContentSyncHelperInterface.php	2023-05-08 20:27:58.000000000 +0200
@@ -135,4 +135,13 @@
    */
   public function getSiteUuid(): string;
 
+  /**
+   * Returns TRUE if the provided entities contain disallowed entities.
+   * 
+   *  @return bool
+   *  Returns TRUE  if the provided entities contain disallowed entities,
+   *  else returns FALSE.
+   */
+  public function containsDisallowedEntities(array $entities): bool;
+
 }
diff -ruN a/src/Form/ContentBulkExportForm.php b/src/Form/ContentBulkExportForm.php
--- a/src/Form/ContentBulkExportForm.php	2023-04-21 15:54:02.000000000 +0200
+++ b/src/Form/ContentBulkExportForm.php	2023-05-08 20:27:58.000000000 +0200
@@ -2,6 +2,7 @@
 
 namespace Drupal\single_content_sync\Form;
 
+use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Entity\EntityInterface;
 use Drupal\Core\Form\ConfirmFormBase;
 use Drupal\Core\Form\FormStateInterface;
@@ -10,6 +11,7 @@
 use Drupal\Core\TempStore\PrivateTempStoreFactory;
 use Drupal\Core\Url;
 use Drupal\single_content_sync\ContentFileGeneratorInterface;
+use Drupal\single_content_sync\ContentSyncHelperInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
 /**
@@ -34,16 +36,27 @@
   protected ContentFileGeneratorInterface $fileGenerator;
 
   /**
+   * The content sync helper.
+   * 
+   * @var \Drupal\single_content_sync\ContentSyncHelperInterface
+   */
+  protected $contentSyncHelper;
+
+  /**
    * Construct of ContentBulkExportForm.
    *
    * @param \Drupal\Core\TempStore\PrivateTempStoreFactory $temp_store_factory
    *   The private temp store of the module.
    * @param \Drupal\single_content_sync\ContentFileGeneratorInterface $file_generator
    *   The custom file generator to export content.
+   * @param \Drupal\Core\Config\ConfigFactoryInterface $config_factory
+   *   The config factory.
    */
-  public function __construct(PrivateTempStoreFactory $temp_store_factory, ContentFileGeneratorInterface $file_generator) {
+  public function __construct(PrivateTempStoreFactory $temp_store_factory, ContentFileGeneratorInterface $file_generator, ConfigFactoryInterface $config_factory, ContentSyncHelperInterface $content_sync_helper) {
     $this->privateTempStore = $temp_store_factory->get('single_content_sync');
     $this->fileGenerator = $file_generator;
+    $this->configFactory = $config_factory;
+    $this->contentSyncHelper = $content_sync_helper;
   }
 
   /**
@@ -52,7 +65,9 @@
   public static function create(ContainerInterface $container) {
     return new static(
       $container->get('tempstore.private'),
-      $container->get('single_content_sync.file_generator')
+      $container->get('single_content_sync.file_generator'),
+      $container->get('config.factory'),
+      $container->get('single_content_sync.content_sync_helper')
     );
   }
 
@@ -139,6 +154,14 @@
     $this->privateTempStore->delete($this->currentUser()->id());
 
     if ($form_state->getValue('confirm')) {
+      $disallowed = $this->contentSyncHelper->containsDisallowedEntities($entities);
+      
+      if ($disallowed) {
+        $this->messenger()->addError($this->t("The export couldn't be completed since it contains disallowed content. Please check the configuration of the Single Content Sync module, or select only allowed content."));
+        $form_state->setRedirect('system.admin_content');
+        return;
+      }
+
       $extract_translations = $form_state->getValue('translation', FALSE);
       $extract_assets = $form_state->getValue('assets', FALSE);
       $file = $this->fileGenerator->generateBulkZipFile($entities, $extract_translations, $extract_assets);
diff -ruN a/src/Form/ContentExportForm.php b/src/Form/ContentExportForm.php
--- a/src/Form/ContentExportForm.php	2023-04-21 15:54:02.000000000 +0200
+++ b/src/Form/ContentExportForm.php	2023-05-08 20:26:39.000000000 +0200
@@ -97,35 +97,33 @@
    */
   protected function handleAutoFileDownload(array &$form): void {
     // Don't check for file downloads if this is a submit request.
-    if ($this->getRequest()->getMethod() === 'POST' || !$this->getRequest()->query->has('file')) {
-      return;
+    if ($this->getRequest()->getMethod() !== 'POST') {
+      if ($uri = $this->getRequest()->query->get('file')) {
+        if (file_exists($uri)) {
+          [$file_scheme, $file_target] = explode('://', $uri, 2);
+
+          $download_url = Url::fromRoute('single_content_sync.file_download', ['scheme' => $file_scheme], [
+            'query' => ['file' => $file_target],
+            'absolute' => TRUE,
+          ])->toString();
+
+          $form['#attached']['html_head'][] = [
+            [
+              '#tag' => 'meta',
+              '#attributes' => [
+                'http-equiv' => 'refresh',
+                'content' => '0; url=' . $download_url,
+              ],
+            ],
+            'single_content_sync_export_download',
+          ];
+          return;
+        }
+
+        // If the file does not exist, something went wrong.
+        $this->messenger()->addError($this->t('The export file could not be found, please try again.'));
+      }
     }
-
-    $uri = $this->getRequest()->query->get('file');
-
-    // If the file does not exist, something went wrong.
-    if (!file_exists($uri)) {
-      $this->messenger()->addError($this->t('The export file could not be found, please try again.'));
-      return;
-    }
-
-    [$file_scheme, $file_target] = explode('://', $uri, 2);
-
-    $download_url = Url::fromRoute('single_content_sync.file_download', ['scheme' => $file_scheme], [
-      'query' => ['file' => $file_target],
-      'absolute' => TRUE,
-    ])->toString();
-
-    $form['#attached']['html_head'][] = [
-      [
-        '#tag' => 'meta',
-        '#attributes' => [
-          'http-equiv' => 'refresh',
-          'content' => '0; url=' . $download_url,
-        ],
-      ],
-      'single_content_sync_export_download',
-    ];
   }
 
   /**
@@ -193,14 +191,6 @@
 
   /**
    * Ajax callback to refresh output field.
-   *
-   * @param array $form
-   *   The form array.
-   * @param \Drupal\Core\Form\FormStateInterface $form_state
-   *   The form state.
-   *
-   * @return array
-   *   The refreshed form element.
    */
   public function refreshContent(array &$form, FormStateInterface $form_state): array {
     // Clean up warning messages when refreshing field.
@@ -218,14 +208,14 @@
     $parameters = $this->getRouteMatch()->getParameters();
     $entity = $this->contentSyncHelper->getDefaultLanguageEntity($parameters);
 
-    // Generate a YML file without assets.
-    if ($button['#name'] === 'download_file') {
-      $file = $this->fileGenerator->generateYamlFile($entity, $extract_translations);
-    }
-
-    // Generate a zip file with assets.
-    if ($button['#name'] === 'download_zip') {
-      $file = $this->fileGenerator->generateZipFile($entity, $extract_translations);
+    switch ($button['#name']) {
+      case 'download_file':
+        $file = $this->fileGenerator->generateYamlFile($entity, $extract_translations);
+        break;
+
+      case 'download_zip':
+        $file = $this->fileGenerator->generateZipFile($entity, $extract_translations);
+        break;
     }
 
     // Display message to download a file immediately.
diff -ruN a/src/Form/ContentSyncConfigForm.php b/src/Form/ContentSyncConfigForm.php
--- a/src/Form/ContentSyncConfigForm.php	2023-04-21 15:54:02.000000000 +0200
+++ b/src/Form/ContentSyncConfigForm.php	2023-05-08 20:26:39.000000000 +0200
@@ -11,8 +11,6 @@
 
 /**
  * Defines a form to configure Single Content Sync settings.
- *
- * @package Drupal\single_content_sync\Form
  */
 class ContentSyncConfigForm extends ConfigFormBase {
 
@@ -140,8 +138,7 @@
     $allowed_types = [];
     foreach ($source as $entity_type_id => $info) {
       if ($info['enabled']) {
-        $bundles = $info['bundles'] ?? [];
-        $allowed_types[$entity_type_id] = array_filter($bundles);
+        $allowed_types[$entity_type_id] = array_filter($info['bundles']);
       }
     }
 
diff -ruN a/src/Plugin/Action/ContentBulkExport.php b/src/Plugin/Action/ContentBulkExport.php
--- a/src/Plugin/Action/ContentBulkExport.php	2023-04-21 15:54:02.000000000 +0200
+++ b/src/Plugin/Action/ContentBulkExport.php	2023-05-08 20:26:39.000000000 +0200
@@ -8,7 +8,6 @@
 use Drupal\Core\Session\AccountInterface;
 use Drupal\Core\TempStore\PrivateTempStore;
 use Drupal\Core\TempStore\PrivateTempStoreFactory;
-use Drupal\single_content_sync\ContentSyncHelperInterface;
 use Symfony\Component\DependencyInjection\ContainerInterface;
 
 /**
@@ -38,13 +37,6 @@
   protected PrivateTempStore $privateTempStore;
 
   /**
-   * The Content sync helper.
-   *
-   * @var \Drupal\single_content_sync\ContentSyncHelperInterface
-   */
-  protected ContentSyncHelperInterface $contentSyncHelper;
-
-  /**
    * Constructs a ContentBulkExport object.
    *
    * @param array $configuration
@@ -57,15 +49,12 @@
    *   The tempstore factory.
    * @param \Drupal\Core\Session\AccountInterface $current_user
    *   Current user.
-   * @param \Drupal\single_content_sync\ContentSyncHelperInterface $content_sync_helper
-   *   The content sync helper.
    */
-  public function __construct(array $configuration, $plugin_id, $plugin_definition, PrivateTempStoreFactory $temp_store_factory, AccountInterface $current_user, ContentSyncHelperInterface $content_sync_helper) {
+  public function __construct(array $configuration, $plugin_id, $plugin_definition, PrivateTempStoreFactory $temp_store_factory, AccountInterface $current_user) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
 
     $this->privateTempStore = $temp_store_factory->get('single_content_sync');
     $this->currentUser = $current_user;
-    $this->contentSyncHelper = $content_sync_helper;
   }
 
   /**
@@ -77,8 +66,7 @@
       $plugin_id,
       $plugin_definition,
       $container->get('tempstore.private'),
-      $container->get('current_user'),
-      $container->get('single_content_sync.helper'),
+      $container->get('current_user')
     );
   }
 
@@ -102,10 +90,6 @@
   public function access($object, AccountInterface $account = NULL, $return_as_object = FALSE) {
     $result = AccessResult::allowedIfHasPermission($account, 'export single content');
 
-    if (!$this->contentSyncHelper->access($object)) {
-      $result = AccessResult::forbidden()->addCacheTags(['config:single_content_sync.settings']);
-    }
-
     return $return_as_object ? $result : $result->isAllowed();
   }
 
